<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="openFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>137, 17</value>
  </metadata>
  <data name="txt_Addr.Text" xml:space="preserve">
    <value>00000000
00000010
00000020
00000030
00000040
00000050
00000060
00000070
00000080
00000090
000000A0
000000B0
000000C0
000000D0
000000E0
000000F0
00000100
00000110
00000120
00000130
00000140
00000150
00000160
00000170
00000180
00000190
000001A0
000001B0
000001C0
000001D0
000001E0
000001F0
00000200
00000210</value>
  </data>
  <data name="txt_Hex.Text" xml:space="preserve">
    <value>07 00 00 00 10 00 00 00 20 00 00 00 00 00 00 00
41 52 45 41 50 4F 49 4E 54 00 00 00 00 00 00 00
60 00 00 00 80 00 00 00 A0 00 00 00 C0 00 00 00
E0 00 00 00 00 01 00 00 20 01 00 00 40 01 00 00
60 01 00 00 80 01 00 00 A0 01 00 00 C0 01 00 00
E0 01 00 00 00 02 00 00 00 00 00 00 00 00 00 00
41 52 45 41 50 4F 49 4E 54 5F 54 49 54 4C 45 5F
30 30 31 00 00 00 00 00 00 00 00 00 00 00 00 00
E3 81 82 E3 81 84 E3 81 86 E3 81 88 E3 81 8A E3
81 8B E3 81 8D E3 81 8F E3 81 91 E3 81 93 00 00
41 52 45 41 50 4F 49 4E 54 5F 54 49 54 4C 45 5F
30 30 32 00 00 00 00 00 00 00 00 00 00 00 00 00
E3 81 82 E3 81 84 E3 81 86 E3 81 88 E3 81 8A E3
81 8B E3 81 8D E3 81 8F E3 81 91 E3 81 93 00 00
41 52 45 41 50 4F 49 4E 54 5F 54 49 54 4C 45 5F
30 30 33 00 00 00 00 00 00 00 00 00 00 00 00 00
E3 81 82 E3 81 84 E3 81 86 E3 81 88 E3 81 8A E3
81 8B E3 81 8D E3 81 8F E3 81 91 E3 81 93 00 00
41 52 45 41 50 4F 49 4E 54 5F 54 49 54 4C 45 5F
30 30 34 00 00 00 00 00 00 00 00 00 00 00 00 00
E3 81 82 E3 81 84 E3 81 86 E3 81 88 E3 81 8A E3
81 8B E3 81 8D E3 81 8F E3 81 91 E3 81 93 00 00
41 52 45 41 50 4F 49 4E 54 5F 54 49 54 4C 45 5F
30 30 35 00 00 00 00 00 00 00 00 00 00 00 00 00
E3 81 82 E3 81 84 E3 81 86 E3 81 88 E3 81 8A E3
81 8B E3 81 8D E3 81 8F E3 81 91 E3 81 93 00 00
41 52 45 41 50 4F 49 4E 54 5F 54 49 54 4C 45 5F
30 30 36 00 00 00 00 00 00 00 00 00 00 00 00 00
E3 81 82 E3 81 84 E3 81 86 E3 81 88 E3 81 8A E3
81 8B E3 81 8D E3 81 8F E3 81 91 E3 81 93 00 00
41 52 45 41 50 4F 49 4E 54 5F 54 49 54 4C 45 5F
30 30 37 00 00 00 00 00 00 00 00 00 00 00 00 00
E3 81 82 E3 81 84 E3 81 86 E3 81 88 E3 81 8A E3
81 8B E3 81 8D E3 81 8F E3 81 91 E3 81 93 00 00</value>
  </data>
  <data name="txt_utf8.Text" xml:space="preserve">
    <value>........ .......
AREAPOINT.......
`.......?..?..
?...... ...@...
`.......?..?..
?..............
AREAPOINT_TITLE_
001.............
銇傘亜銇嗐亪銇娿
亱銇嶃亸銇戙亾..
AREAPOINT_TITLE_
002.............
銇傘亜銇嗐亪銇娿
亱銇嶃亸銇戙亾..
AREAPOINT_TITLE_
003.............
銇傘亜銇嗐亪銇娿
亱銇嶃亸銇戙亾..
AREAPOINT_TITLE_
004.............
銇傘亜銇嗐亪銇娿
亱銇嶃亸銇戙亾..
AREAPOINT_TITLE_
005.............
銇傘亜銇嗐亪銇娿
亱銇嶃亸銇戙亾..
AREAPOINT_TITLE_
006.............
銇傘亜銇嗐亪銇娿
亱銇嶃亸銇戙亾..
AREAPOINT_TITLE_
007.............
銇傘亜銇嗐亪銇娿
亱銇嶃亸銇戙亾..</value>
  </data>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>278, 17</value>
  </metadata>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>399, 17</value>
  </metadata>
  <metadata name="saveFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>489, 17</value>
  </metadata>
</root>